buildscript {
    ext.kotlin_version = '1.3.31'
    Properties constants = new Properties()
    file("$projectDir/../constants.properties").withInputStream { constants.load(it) }

    ext {
        corda_release_group = constants.getProperty("cordaReleaseGroup")
        corda_release_version = constants.getProperty("cordaVersion")
        corda_core_release_group =  constants.getProperty("cordaCoreReleaseGroup")
        corda_core_release_version = constants.getProperty("cordaCoreVersion")
        corda_gradle_plugins_version = constants.getProperty("gradlePluginsVersion")
        kotlin_version = constants.getProperty("kotlinVersion")
        junit_version = constants.getProperty("junitVersion")
        quasar_version = constants.getProperty("quasarVersion")
        log4j_version = constants.getProperty("log4jVersion")
        slf4j_version = constants.getProperty("slf4jVersion")
        corda_platform_version = constants.getProperty("platformVersion")
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

apply from: './repositories.gradle'

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'net.corda.plugins.cordapp'
    apply plugin: 'net.corda.plugins.cordformation'
    apply plugin: 'net.corda.plugins.quasar-utils'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testCompile "junit:junit:$junit_version"

        // Corda dependencies.
        cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
        cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
        cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
        cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
        cordaRuntime "$corda_release_group:corda:$corda_release_version"

        testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    }

    sourceSets {
        main {
            resources {
                srcDir "../config/dev"
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters" // Required for shell commands.
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }

    cordapp {
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
        workflow {
            name "Ping-Pong"
            vendor "Corda Open Source"
            licence "Apache License, Version 2.0"
            versionId 1
        }
    }
}