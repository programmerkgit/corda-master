buildscript {
    ext.kotlin_version = '1.3.31'
    Properties constants = new Properties()
    file("$projectDir/../constants.properties").withInputStream { constants.load(it) }
    ext {
        corda_release_group = constants.getProperty("cordaReleaseGroup")
        corda_release_version = constants.getProperty("cordaVersion")
        corda_core_release_group =  constants.getProperty("cordaCoreReleaseGroup")
        corda_core_release_version = constants.getProperty("cordaCoreVersion")
        corda_gradle_plugins_version = constants.getProperty("gradlePluginsVersion")
        kotlin_version = constants.getProperty("kotlinVersion")
        junit_version = constants.getProperty("junitVersion")
        quasar_version = constants.getProperty("quasarVersion")
        log4j_version = constants.getProperty("log4jVersion")
        slf4j_version = constants.getProperty("slf4jVersion")
        corda_platform_version = constants.getProperty("platformVersion")
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "us.kirchmeier:gradle-capsule-plugin:1.0.4_r3"
    }
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'net.corda.plugins.cordapp'
    apply plugin: 'net.corda.plugins.quasar-utils'
    apply plugin: "us.kirchmeier.capsule"
    apply plugin: 'net.corda.plugins.cordformation'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    }


    cordapp {
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
        contract {}
        workflow {
            name "Corda NodeInfo"
            vendor "Corda Open Source"
            licence "Apache License, Version 2.0"
            versionId 1
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        cordaRuntime "org.slf4j:slf4j-simple:$slf4j_version"
        cordaCompile "net.corda:corda-rpc:$corda_release_version"
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.3"
            apiVersion = "1.3"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }
}

dependencies {
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10004
        rpcSettings {
            address("localhost:10007")
            adminAddress("localhost:10046")
        }
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}